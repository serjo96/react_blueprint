/* tslint:disable */
/* eslint-disable */
/**
 * Blueprint api
 * The blueprint API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type { AppControllerSendTestEmailRequest } from '../models/index';
import {
  AppControllerSendTestEmailRequestFromJSON,
  AppControllerSendTestEmailRequestToJSON,
} from '../models/index';

export interface AppControllerSendTestEmailOperationRequest {
  appControllerSendTestEmailRequest: AppControllerSendTestEmailRequest;
}

/**
 *
 */
export class DefaultApi extends runtime.BaseAPI {
  /**
   */
  async appControllerGetHelloRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<void>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/api/v1`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides
    );

    return new runtime.VoidApiResponse(response);
  }

  /**
   */
  async appControllerGetHello(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<void> {
    await this.appControllerGetHelloRaw(initOverrides);
  }

  /**
   */
  async appControllerSendTestEmailRaw(
    requestParameters: AppControllerSendTestEmailOperationRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<void>> {
    if (
      requestParameters.appControllerSendTestEmailRequest === null ||
      requestParameters.appControllerSendTestEmailRequest === undefined
    ) {
      throw new runtime.RequiredError(
        'appControllerSendTestEmailRequest',
        'Required parameter requestParameters.appControllerSendTestEmailRequest was null or undefined when calling appControllerSendTestEmail.'
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/api/v1/send-test-email`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: AppControllerSendTestEmailRequestToJSON(
          requestParameters.appControllerSendTestEmailRequest
        ),
      },
      initOverrides
    );

    return new runtime.VoidApiResponse(response);
  }

  /**
   */
  async appControllerSendTestEmail(
    requestParameters: AppControllerSendTestEmailOperationRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<void> {
    await this.appControllerSendTestEmailRaw(requestParameters, initOverrides);
  }
}
