/* tslint:disable */
/* eslint-disable */
/**
 * Blueprint api
 * The blueprint API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserEntity } from './UserEntity';
import {
    UserEntityFromJSON,
    UserEntityFromJSONTyped,
    UserEntityToJSON,
} from './UserEntity';

/**
 * 
 * @export
 * @interface RefreshToken
 */
export interface RefreshToken {
    /**
     * 
     * @type {string}
     * @memberof RefreshToken
     */
    token: string;
    /**
     * 
     * @type {Date}
     * @memberof RefreshToken
     */
    expiresIn: Date;
    /**
     * 
     * @type {UserEntity}
     * @memberof RefreshToken
     */
    user: UserEntity;
    /**
     * 
     * @type {number}
     * @memberof RefreshToken
     */
    userId: number;
}

/**
 * Check if a given object implements the RefreshToken interface.
 */
export function instanceOfRefreshToken(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "token" in value;
    isInstance = isInstance && "expiresIn" in value;
    isInstance = isInstance && "user" in value;
    isInstance = isInstance && "userId" in value;

    return isInstance;
}

export function RefreshTokenFromJSON(json: any): RefreshToken {
    return RefreshTokenFromJSONTyped(json, false);
}

export function RefreshTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): RefreshToken {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'token': json['token'],
        'expiresIn': (new Date(json['expiresIn'])),
        'user': UserEntityFromJSON(json['user']),
        'userId': json['userId'],
    };
}

export function RefreshTokenToJSON(value?: RefreshToken | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'token': value.token,
        'expiresIn': (value.expiresIn.toISOString()),
        'user': UserEntityToJSON(value.user),
        'userId': value.userId,
    };
}

