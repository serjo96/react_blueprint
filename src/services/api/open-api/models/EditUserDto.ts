/* tslint:disable */
/* eslint-disable */
/**
 * Blueprint api
 * The blueprint API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EditUserDto
 */
export interface EditUserDto {
    /**
     * 
     * @type {string}
     * @memberof EditUserDto
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof EditUserDto
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof EditUserDto
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof EditUserDto
     */
    roles: EditUserDtoRolesEnum;
}


/**
 * @export
 */
export const EditUserDtoRolesEnum = {
    Guest: 'guest',
    User: 'user',
    Moderator: 'moderator',
    Admin: 'admin'
} as const;
export type EditUserDtoRolesEnum = typeof EditUserDtoRolesEnum[keyof typeof EditUserDtoRolesEnum];


/**
 * Check if a given object implements the EditUserDto interface.
 */
export function instanceOfEditUserDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "roles" in value;

    return isInstance;
}

export function EditUserDtoFromJSON(json: any): EditUserDto {
    return EditUserDtoFromJSONTyped(json, false);
}

export function EditUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EditUserDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': !exists(json, 'email') ? undefined : json['email'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'roles': json['roles'],
    };
}

export function EditUserDtoToJSON(value?: EditUserDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'name': value.name,
        'password': value.password,
        'roles': value.roles,
    };
}

